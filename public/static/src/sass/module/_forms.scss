/* ----------- =forms ----------- */

input[type="text"],
input[type="email"],
input[type="password"],
input[type="number"],
input[type="tel"],
input[type="date"],
textarea,
select {
  @extend .alternate-typeface;
  display: block;
  width: 100%;
  padding: $line*3/8 $line/2;
  margin-bottom: $line;
  border: 1px solid darken($bg-light, 5%);
  font-size: $micro;
  line-height: $line;
  color: $copy;
  color: transparentize($copy, 0.2);
  background: rgba(255,255,255,0.6);
  transition: color 0.15s ease-out, border-color 0.15s ease-out, background-color 0.15s ease-out, opacity 0.15s ease-out;
  &:last-child {
    margin-bottom: 0;
  }
  &:required {
    border-color: mix($bg-light, $primary-dark, 80%);
  }
  &.input-validation-error {
    border-color: $negative;
    color: $negative;
  }
  &:focus {
    border-color: $accent;
    color: $copy;
  }
}
textarea {
  max-width: 100%;
  padding: $line/2;
  min-height: $line*4;
  &.textarea-large {
    min-height: $line*10;
  }
}
input[type="radio"], input[type="checkbox"] {
  display: inline-block;
  position: relative;
  top: -0.1em;
  label + & {
    margin-left: $line;
  }
}

label {
  @extend .alternate-typeface;

  display: block;
  margin-bottom: $line/4;
  font-size: $micro;
  font-weight: 900;
  color: $accent-dark;
  opacity: 0.9;
  transition: color 0.15s ease-out, opacity 0.15s ease-out;
  input[type="radio"] + &, input[type="checkbox"] + & {
    display: inline-block;
    vertical-align: top;
    font-weight: 400;
  }
  &.required {
    &::after {
      content: '*';
      font-weight: 400;
    }
    color: $primary-dark;
  }
  &.is-selected {
    color: $accent-dark;
  }
  &.is-focused {
    color: $accent;
    opacity: 1;
  }
}

.side-label {
  $width: $line*7;
  @extend .group;
  margin-bottom: $line;
  &:last-child {
    margin-bottom: 0;
  }
  @media #{$min-s} {
    padding-left: $width;
    label {
      width: $width;
      float: left;
      margin-left: -$width;
      padding: $line/4 1em 0 0;
    }
  }
}

fieldset {
  padding: $line;
  border-color: $bg-light;
  margin-bottom: $line*2;
  @media #{$max-s} {
    margin-left: -$line/2;
    margin-right: -$line/2;
    padding-left: $line/2;
    padding-right: $line/2;
  }
}
legend {
  @extend .alternate-typeface;
  padding: 0 $line/4;
  margin-left: -$line/4;
  font-weight: 400;
  font-size: $giga;
  line-height: $line*1.5;
  color: $copy;
  opacity: 0.4;
}

.textarea-size-reference {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  visibility: hidden;
  z-index: -1;
  pointer-events: none;
}

// enhanced multi-select inputs
select[multiple].is-enhanced {
  visibility: hidden;
  height: 1px;
  border: none;
  margin: 0;
  padding: 0;
}
.multi-select {
  margin-bottom: $line;
  &:last-child {
    margin-bottom: 0;
  }
  &__actives {
    margin-bottom: $line/2;
  }
  &__active {
    display: none;
    width: 100%;
    padding: $line/4 $line;
    border: 1px solid $bg-light;
    background: rgba(255,255,255,0.5) url('../images/icon-x.svg') no-repeat 90% 50%;
    background-position: calc(100% - #{$line}) 50%;
    background-size: $line/2 $line/2;
    text-align: left;
    & + & {
      margin-top: $line/4;
    }
    &.is-active {
      display: block;
    }
  }
  &__modal {
    display: none;
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    padding: $line;
    background: rgba(0,0,0,0.9);
    z-index: 20;
    &.is-active {
      display: block;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }
  }
  &__options {
    width: 100%;
    max-width: $line*20;
    max-height: 80%;
    overflow-y: auto;
    background: $bg;
  }
  &__option {
    display: block;
    width: 100%;
    padding: $line/4 $line;
    & + & {
      border-top: 1px solid $bg-light;
    }
    &.is-selected {
      background: $accent;
      color: #fff;
    }
  }
  &__close {
    width: 100%;
    max-width: $line*20;
    border-top: 1px solid $bg;
  }
  &__none {
    font-style: italic;
    font-size: $micro;
    line-height: $line*1.5 + 2px;
    opacity: 0.8;
  }
  &__active.is-active ~ &__none {
    display: none;
  }
}


// range inputs. Thanks to css-tricks for a starting point
// https://css-tricks.com/styling-cross-browser-compatible-range-inputs-css/

$track-height: 8px;
@mixin track {
  background: $bg-light;
  $g1: transparent;
  $g2: transparentize($bg, 0.8);
  background-image: linear-gradient(to right, #3b5 0%, #ca3 40%, #c42 100%);
  position: relative;
  z-index: 1;
}
@mixin track-focus {
  border-color: $accent;
}

$thumb-width: $line/2;
$thumb-height: $line;
@mixin thumb {
  border: 1px solid darken($bg-light, 10%);
  border-radius: 1px;
  background: $bg;
  position: relative;
  z-index: 3;
}
@mixin thumb-focus {
  background: #fff;
}

input[type="range"] {
  -webkit-appearance: none;
  margin: 0;
  width: 100%;
  &:focus {
    outline: none;
  }

  &::-webkit-slider-runnable-track {
    width: 100%;
    height: $track-height;
    cursor: pointer;
    margin: (($thumb-height - $track-height)/2) 0;
    @include track;
  }
  &::-moz-range-track {
    width: 100%;
    height: $track-height;
    cursor: pointer;
    @include track;
  }
  &::-ms-track {
    width: 100%;
    height: $track-height;
    cursor: pointer;
    background: transparent;
    border-color: transparent;
    border-width: ($track-height/2 - $thumb-height/2) 0;
    color: transparent;
  }
  &::-ms-fill-lower {
    @include track;
  }
  &::-ms-fill-upper {
    @include track;
  }
  &:focus::-webkit-slider-runnable-track {
    @include track-focus;
  }
  &:focus::-moz-range-track {
    @include track-focus;
  }
  &:focus::-ms-fill-lower {
    @include track-focus;
  }
  &:focus::-ms-fill-upper {
    @include track-focus;
  }

  &::-webkit-slider-thumb {
    -webkit-appearance: none;
    width: $thumb-width;
    height: $thumb-height;
    margin-top: -($thumb-height/2 - $track-height/2 + 1px);
    cursor: pointer;
    @include thumb;
  }
  &::-moz-range-thumb {
    width: $thumb-width;
    height: $thumb-height;
    cursor: pointer;
    @include thumb;
  }
  &::-ms-thumb {
    width: $thumb-width;
    height: $thumb-height;
    cursor: pointer;
    @include thumb;
  }
  &:focus::-webkit-slider-thumb {
    @include thumb-focus;
  }
  &:focus::-moz-range-thumb {
    @include thumb-focus;
  }
  &:focus::-ms-thumb {
    @include thumb-focus;
  }
}

.range-group {
  position: relative;
  min-height: max($track-height, $thumb-height);
  margin: $line/4 0;
  input[type="range"] {
    position: absolute;
    left: 0;
    top: 0;
    pointer-events: none;

    // let first slider thumb show through
    &:last-child::-webkit-slider-runnable-track {
      border: none;
      background: transparent;
    }
    &:last-child::-moz-range-track {
      border: none;
      background: transparent;
    }
    &:last-child::-ms-track {
      border: none;
      background: transparent;
    }

    // allow events on thumbs only, such that the overlapping track
    // doesn't steal events from the first thumb
    &::-webkit-slider-thumb {
      pointer-events: all;
    }
    &::-moz-range-thumb {
      pointer-events: all;
    }
    &::-ms-thumb {
      pointer-events: all;
    }

    // cover areas outside selected range
    @mixin occlude-left {
      $shadow: '-#{$thumb-width} 0 0 #{$bg}';
      @for $i from 2 through 50 {
        $shadow: '#{$shadow}, -#{$thumb-width * $i} 0 0 #{$bg}';
      }
      box-shadow: unquote($shadow);
    }
    @mixin occlude-right {
      $shadow: '#{$thumb-width} 0 0 #{$bg}';
      @for $i from 2 through 50 {
        $shadow: '#{$shadow}, #{$thumb-width * $i} 0 0 #{$bg}';
      }
      box-shadow: unquote($shadow);
    }
    &:first-child::-webkit-slider-thumb {
      @include occlude-left;
    }
    &:first-child::-moz-range-thumb {
      @include occlude-left;
    }
    &:first-child::-ms-thumb {
      @include occlude-left;
    }
    &:last-child::-webkit-slider-thumb {
      @include occlude-right;
    }
    &:last-child::-moz-range-thumb {
      @include occlude-right;
    }
    &:last-child::-ms-thumb {
      @include occlude-right;
    }
  }

  // provide ghost bounds to help user visualize limits
  &::before, &::after {
    content: '';
    display: block;
    width: 2px;
    position: absolute;
    top: 0;
    bottom: 0;
    z-index: 4;
    background: $bg-light;
  }
  &::before {
    right: 100%;
  }
  &::after {
    left: 100%;
  }
}

.login-form {
  max-width: $line*15;
  margin: 0 auto;
  padding: $line;
  background: rgba(255,255,255,0.5);
  border: 1px solid $bg-light;
  .button {
    margin-top: $line*1.5;
  }
}

.forgot-password {
  display: inline-block;
  margin-top: $line/2;
  font-style: italic;
  &.is-active {
    display: none;
  }
  &__answer {
    display: none;
    margin-top: $line/2;
    font-size: $milli;
    &.is-active {
      display: block;
    }
  }
}
